# Generated by Django 4.0.3 on 2022-03-10 10:55

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Departments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Episodes',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Genres',
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('tagline', models.CharField(max_length=510)),
                ('storyline', models.TextField()),
                ('runtime', models.PositiveIntegerField()),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('release_date', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'Movies',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'People',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TVShow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('storyline', models.TextField()),
                ('runtime', models.PositiveIntegerField()),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('release', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'TV Shows',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='TVShowPoster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poster', models.ImageField(upload_to='tvshow/posters')),
                ('tvshow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tvshow_poster', to='base.tvshow')),
            ],
        ),
        migrations.CreateModel(
            name='TVShowGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.genre')),
                ('tvshow', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.tvshow')),
            ],
            options={
                'verbose_name_plural': 'TV Show Genres',
            },
        ),
        migrations.CreateModel(
            name='TVShowCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.department')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.person')),
                ('tvshow', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.tvshow')),
            ],
            options={
                'verbose_name_plural': 'TV Show Credits',
            },
        ),
        migrations.CreateModel(
            name='TVShowBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner', models.ImageField(upload_to='tvshow/banners')),
                ('tvshow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tvshow_banner', to='base.tvshow')),
            ],
        ),
        migrations.CreateModel(
            name='SeasonAndEpisode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.PositiveIntegerField()),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episode', to='base.episode')),
                ('tvshow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tvshow', to='base.tvshow')),
            ],
            options={
                'verbose_name_plural': 'Season and Episode',
            },
        ),
        migrations.CreateModel(
            name='MoviePoster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poster', models.ImageField(upload_to='movie/posters')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_poster', to='base.movie')),
            ],
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.genre')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.movie')),
            ],
            options={
                'verbose_name_plural': 'Movie Genres',
            },
        ),
        migrations.CreateModel(
            name='MovieCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.department')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.movie')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.person')),
            ],
            options={
                'verbose_name_plural': 'Movie Credits',
            },
        ),
        migrations.CreateModel(
            name='MovieBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner', models.ImageField(upload_to='movie/banners')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_banner', to='base.movie')),
            ],
        ),
    ]
